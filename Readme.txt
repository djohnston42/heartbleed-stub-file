This practical involved the creation of a stubbing file to identify and fix the heartbleed vulnerability in OpenSSL. Stubbing was a necessary measure used in examining the functionality of the heartbleed bug. This process involved ripping out all of the necessary elements of the OpenSSL package and compiling them in a single c file then adding a function which simulated the conditions of a heartbleed attack. The first step in the process was to copy out the functions, structures and definitions from the OpenSSL package responsible for handling the heartbeat request, (in this case this had already been partially completed). These included “tls_process_heartbeat()” which is the function involved is dealing with the received heartbeat request, “RAND_pseudo_bytes()” the function responsible for reading random data from the Linux entropy store for the message padding, and ssl_write_bytes() responsible for returning the HeartbeatResponse message over the network to the HeartbeatRequest sender, however for the purposes of the stubbing exercise it would be used to print the message to stdout. 